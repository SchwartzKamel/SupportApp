#!/bin/zsh

# Install Support App LaunchAgent
#
#
# Copyright 2022 Root3 B.V. All rights reserved.
#
# This script will create the Support App Legacy LaunchAgent and reload it when
# needed on macOS 12 and below. On macOS 13 and higher, the script will open the
# app to allow registration of the LaunchAgent using SMAppService.
#
# THE SOFTWARE IS PROVIDED BY ROOT3 B.V. "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
# EVENT SHALL ROOT3 B.V. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
# IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# ------------------    edit the variables below this line    ------------------

# Load Requirements
autoload is-at-least

# macOS Version
os_version=$(sw_vers -productVersion)

# LaunchAgent label
launch_agent="nl.root3.support"

# Install location
install_location="/Applications/Support.app"

# Get the username of the currently logged in user
username=$(scutil <<< "show State:/Users/ConsoleUser" | awk '/Name :/ && ! /loginwindow/ { print $3 }')
echo "Current logged in user: ${username}"

# Get the username ID
uid=$(id -u "${username}")

# Remove "Downloaded from Internet" warning
xattr -d -r com.apple.quarantine "${install_location}"

# Install Legacy LaunchAgent only on macOS 12 and below
if is-at-least 13.0 ${os_version}; then
	if ! pgrep -x "Support"; then
		# Open Support App to start LaunchAgent registration using SMAppService
		open "${install_location}"
	else 
		# Quit Support App in case it needs to reload after an update
		killall -9 "Support"
  	fi
else
	# Create the LaunchAgent
	defaults write "/Library/LaunchAgents/${launch_agent}.plist" Label -string "${launch_agent}"
	defaults write "/Library/LaunchAgents/${launch_agent}.plist" ProgramArguments -array -string "/Applications/Support.app/Contents/MacOS/Support"
	# Run every reboot
	defaults write "/Library/LaunchAgents/${launch_agent}.plist" KeepAlive -boolean yes
	# Set ProcessType to Interactive
	defaults write "/Library/LaunchAgents/${launch_agent}.plist" ProcessType -string "Interactive"
	# Set permissions
	chown root:wheel "/Library/LaunchAgents/${launch_agent}.plist"
	chmod 644 "/Library/LaunchAgents/${launch_agent}.plist"
fi

# Reload Legacy LaunchAgent
if [[ -n "${username}" ]] && [[ -f "/Library/LaunchAgents/${launch_agent}.plist" ]]; then
	# Unload the LaunchAgent
	launchctl bootout gui/${uid} "/Library/LaunchAgents/${launch_agent}.plist" &> /dev/null

	# Just to be sure, kill Support App if still running
	if pgrep -x "Support" ; then
		killall -9 "Support"
	fi

	# Load the LaunchAgent
	launchctl bootstrap gui/${uid} "/Library/LaunchAgents/${launch_agent}.plist"
fi