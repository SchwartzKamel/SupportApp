#!/bin/zsh

# Install Support App LaunchAgent
#
#
# Copyright 2022 Root3 B.V. All rights reserved.
#
# This script will create the Support App LaunchAgent and reload it when needed.
#
# THE SOFTWARE IS PROVIDED BY ROOT3 B.V. "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
# EVENT SHALL ROOT3 B.V. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
# IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# ------------------    edit the variables below this line    ------------------

# LaunchAgent label
launch_agent="nl.root3.support"

# Install location
install_location="/Applications/Support.app"

# Get the username of the currently logged in user
username=$(scutil <<< "show State:/Users/ConsoleUser" | awk '/Name :/ && ! /loginwindow/ { print $3 }')

# Get the username ID
uid=$(id -u "${username}")

# Remove "Downloaded from Internet" warning
xattr -d -r com.apple.quarantine "${install_location}"

# Create the LaunchAgent
defaults write "/Library/LaunchAgents/${launch_agent}.plist" Label -string "${launch_agent}"
defaults write "/Library/LaunchAgents/${launch_agent}.plist" Program -string "${install_location}/Contents/MacOS/Support"
# Run every reboot
defaults write "/Library/LaunchAgents/${launch_agent}.plist" KeepAlive -boolean yes
# Set ProcessType to Interactive
defaults write "/Library/LaunchAgents/${launch_agent}.plist" ProcessType -string "Interactive"
# Add AssociatedBundleIdentifiers to show app name in Login Items on 
# macOS 13 and higher instead of developer name
defaults write "/Library/LaunchAgents/${launch_agent}.plist" AssociatedBundleIdentifiers -string "nl.root3.support"
# Set permissions
chown root:wheel "/Library/LaunchAgents/${launch_agent}.plist"
chmod 644 "/Library/LaunchAgents/${launch_agent}.plist"

# Reload the LaunchAgent
if [[ -n "${username}" ]]; then

	# Unload the LaunchAgent
	if launchctl print "gui/${uid}/${launch_agent}" &> /dev/null ; then
		launchctl bootout gui/${uid} "/Library/LaunchAgents/${launch_agent}.plist" &> /dev/null
	fi

	# Just to be sure, kill Support App if still running
	if pgrep -x "Support" ; then
		killall -9 "Support"
	fi

	# Load the LaunchAgent
	launchctl bootstrap gui/${uid} "/Library/LaunchAgents/${launch_agent}.plist"
fi